//Largest Sum Contiguous subarray
#include <iostream>
#define ARRAY_SIZE 8
using namespace std;
void print_array(int [], int );
int kadane_algo(int [], int );
int kadane_algo_index(int [], int );
int main()
{
	int n = ARRAY_SIZE;
	int arr [n] = {-2,-3,4,-1,-2,1,5,-3};
	//
	cout<<endl<<"Largest sum is "<<kadane_algo(arr, n); 
	int result = kadane_algo_index(arr, n);
	cout<<endl<<"Largest sum is "<<result; 
	print_array(arr,n);
	return 0;
}
int kadane_algo(int a[], int n)
{
	int max_so_far = 0;
	int max_ending_here = 0;
	for (int i=0;i<n;i++)
	{
		max_ending_here += a[i];
		if (max_ending_here < 0)
		{
			max_ending_here = 0;
		}
		else if (max_so_far < max_ending_here)
		{
			max_so_far = max_ending_here;
		}
	}
	return max_so_far;
}
//to keep indexes of subarray as well
int kadane_algo_index(int a[], int n)
{
	int max_so_far = INT_MIN;
	int max_ending_here = 0;
	int s=0, start=0, end=0;
	for (int i=0;i<n;i++)
	{
		max_ending_here += a[i];
		if (max_ending_here < 0)
		{
			max_ending_here = 0;
			s=i+1;
		}
		else if (max_so_far < max_ending_here)
		{
			max_so_far = max_ending_here;
			start = s;
			end = i;
		}
	}
	cout<<endl<<"Indexes are "<<start << " "<<end<<endl;
	return max_so_far;
}
void print_array(int a[], int n)
{
	cout<<endl<<"Elements are"<<endl;
	int i = -1;
	while(++i < n)
	{
		cout <<a[i]<<" ";
	}
}
